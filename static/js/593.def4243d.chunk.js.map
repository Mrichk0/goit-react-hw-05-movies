{"version":3,"file":"static/js/593.def4243d.chunk.js","mappings":"oQACA,EAAiC,mCAAjC,EAAkF,gC,SCG5EA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,GAAuB,IAAnBA,EAAQC,OACV,OAAO,qEAET,IAAMC,EAAWF,EAAQG,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1C,OACE,gBAAIC,UAAWC,EAAf,WACE,uBAAIH,KACJ,uBAAIC,MAFqCF,MAM/C,OAAO,eAAIG,UAAWC,EAAf,SAAoCN,KAG7C,IAEAH,EAAYU,aAAe,CACzBT,QAAS,ICfX,IAwCA,EAxCgB,WACd,OAA0BU,EAAAA,EAAAA,UAAS,CACjCV,QAAS,GACTW,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMQV,GAAOW,EAAAA,EAAAA,MAAPX,IAERY,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMb,GAAN,yFAEjBU,GAAS,SAAAI,GAAS,yBAAUA,GAAV,IAAqBP,SAAS,OAF/B,UAGSQ,EAAAA,EAAAA,IAAef,GAHxB,gBAGTgB,EAHS,EAGTA,QAERN,GAAS,SAAAI,GAAS,yBACbA,GADa,IAEhBP,SAAS,EACTX,QAASoB,OARM,gDAWjBN,GAAS,SAAAI,GAAS,yBACbA,GADa,IAEhBP,SAAS,EACTC,MAAO,KAAMS,aAdE,yDAAH,sDAkBlBJ,EAAab,KACZ,CAACA,IAEJ,IAAQJ,EAAYa,EAAZb,QAER,OACE,0BACE,SAACsB,EAAD,CAAYtB,QAASA,Q,gMCxCrBuB,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAa,mCAAG,sGACJL,EAASM,IAAI,sBADT,uBACnBC,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDAKbC,EAAY,mCAAG,WAAM3B,GAAN,uFACPmB,EAASM,IAAT,iBAAuBzB,IADhB,cACpB0B,EADoB,yBAGnBA,GAHmB,2CAAH,sDAMZE,EAAW,mCAAG,WAAMC,GAAN,yFACFV,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNO,MAAAA,KAHqB,uBACjBH,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,sDAUXI,EAAe,mCAAG,WAAM9B,GAAN,yFACNmB,EAASM,IAAT,iBAAuBzB,EAAvB,aADM,uBACrB0B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfX,EAAc,mCAAG,WAAMf,GAAN,yFACLmB,EAASM,IAAT,iBAAuBzB,EAAvB,aADK,uBACpB0B,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/ReviewList/reviewList.module.css?c460","components/ReviewList/ReviewList.jsx","pages/MovieDetailsPage/Reviews/Reviews.jsx","shared/api/films.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsElement\":\"reviewList_reviewsElement__BOQp6\",\"reviewsList\":\"reviewList_reviewsList__48Dan\"};","import PropTypes from 'prop-types';\n\nimport styles from './reviewList.module.css';\n\nconst ReviewsList = ({ reviews }) => {\n  if (reviews.length === 0) {\n    return <div>we dont have any reviews for this movie</div>;\n  }\n  const elements = reviews.map(({ id, author, content }) => {\n    return (\n      <li className={styles.reviewsElement} key={id}>\n        <p>{author}</p>\n        <p>{content}</p>\n      </li>\n    );\n  });\n  return <ul className={styles.reviewsList}>{elements}</ul>;\n};\n\nexport default ReviewsList;\n\nReviewsList.defaultProps = {\n  reviews: [],\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      original_name: PropTypes.string,\n      original_title: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { getMovieReview } from '../../../shared/api/films';\n\nimport ReviewList from 'components/ReviewList';\n\nconst Reviews = () => {\n  const [state, setState] = useState({\n    reviews: [],\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async id => {\n      try {\n        setState(prevState => ({ ...prevState, loading: true }));\n        const { results } = await getMovieReview(id);\n\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          reviews: results,\n        }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: error.message,\n        }));\n      }\n    };\n    fetchReviews(id);\n  }, [id]);\n\n  const { reviews } = state;\n\n  return (\n    <div>\n      <ReviewList reviews={reviews} />\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'bca34bbfc009d7fec4acd7837db1b38e',\n  },\n});\n\nexport const trendingMovie = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const data = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["ReviewsList","reviews","length","elements","map","id","author","content","className","styles","defaultProps","useState","loading","error","state","setState","useParams","useEffect","fetchReviews","prevState","getMovieReview","results","message","ReviewList","instance","axios","baseURL","params","api_key","trendingMovie","get","data","getMovieById","searchMovie","query","getMovieCredits"],"sourceRoot":""}