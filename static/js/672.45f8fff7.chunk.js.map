{"version":3,"file":"static/js/672.45f8fff7.chunk.js","mappings":"qQACA,EAA8B,8BAA9B,EAAuE,2B,SCGjEA,EAAW,SAAC,GAAe,IACzBC,EADwB,EAAZC,MACKC,KACrB,YAA2D,IAAxDC,EAAuD,EAAvDA,GAAIC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAClCC,EAAQJ,EAAY,yCACYA,GAClC,wDACJ,OACE,gBAAIK,UAAWC,EAAf,WACE,gBAAKC,IAAKH,EAAOI,IAAKP,KACtB,uBAAIC,KACJ,uBAAIC,MAHkCJ,MAQ9C,OAAO,eAAIM,UAAWC,EAAf,SAAiCV,KAG1C,IAEAD,EAASc,aAAe,CACtBZ,MAAO,ICnBT,IAmCA,EAnCa,WACX,OAA0Ba,EAAAA,EAAAA,UAAS,CACjCC,KAAM,GACNC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMQhB,GAAOiB,EAAAA,EAAAA,MAAPjB,IAERkB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMnB,GAAN,yFAEdgB,GAAS,SAAAI,GAAS,yBAAUA,GAAV,IAAqBP,SAAS,OAFlC,UAGSQ,EAAAA,EAAAA,IAAgBrB,GAHzB,gBAGNY,EAHM,EAGNA,KACRI,GAAS,SAAAI,GAAS,yBAAUA,GAAV,IAAqBP,SAAS,EAAOD,KAAAA,OAJzC,gDAMdI,GAAS,SAAAI,GAAS,yBACbA,GADa,IAEhBP,SAAS,EACTC,MAAO,KAAMQ,aATD,yDAAH,sDAafH,EAAUnB,KACT,CAACA,IAEJ,IAAQY,EAASG,EAATH,KAER,OACE,0BACE,SAAC,EAAD,CAAUd,MAAOc,Q,gMClCjBW,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAa,mCAAG,sGACJL,EAASM,IAAI,sBADT,uBACnBC,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDAKbC,EAAY,mCAAG,WAAM/B,GAAN,uFACPuB,EAASM,IAAT,iBAAuB7B,IADhB,cACpB8B,EADoB,yBAGnBA,GAHmB,2CAAH,sDAMZE,EAAW,mCAAG,WAAMC,GAAN,yFACFV,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNO,MAAAA,KAHqB,uBACjBH,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,sDAUXT,EAAe,mCAAG,WAAMrB,GAAN,yFACNuB,EAASM,IAAT,iBAAuB7B,EAAvB,aADM,uBACrB8B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAc,mCAAG,WAAMlC,GAAN,yFACLuB,EAASM,IAAT,iBAAuB7B,EAAvB,aADK,uBACpB8B,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/CastList/castList.module.css?a5f2","components/CastList/CastList.jsx","pages/MovieDetailsPage/Cast/Cast.jsx","shared/api/films.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castElement\":\"castList_castElement__tpSvr\",\"castList\":\"castList_castList__n6o4I\"};","import PropTypes from 'prop-types';\n\nimport styles from './castList.module.css';\n\nconst CastList = ({ casts }) => {\n  const elements = casts.map(\n    ({ id, profile_path, original_name, name, character }) => {\n      const photo = profile_path\n        ? `http://image.tmdb.org/t/p/w300/${profile_path}`\n        : 'https://www.unmc.edu/cihc/_images/faculty/default.jpg';\n      return (\n        <li className={styles.castElement} key={id}>\n          <img src={photo} alt={original_name} />\n          <p>{name}</p>\n          <p>{character}</p>\n        </li>\n      );\n    }\n  );\n  return <ul className={styles.castList}>{elements}</ul>;\n};\n\nexport default CastList;\n\nCastList.defaultProps = {\n  casts: [],\n};\n\nCastList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      original_name: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../../shared/api/films';\nimport CastList from 'components/CastList/CastList';\n\nconst Cast = () => {\n  const [state, setState] = useState({\n    cast: [],\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async id => {\n      try {\n        setState(prevState => ({ ...prevState, loading: true }));\n        const { cast } = await getMovieCredits(id);\n        setState(prevState => ({ ...prevState, loading: false, cast }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: error.message,\n        }));\n      }\n    };\n    fetchCast(id);\n  }, [id]);\n\n  const { cast } = state;\n\n  return (\n    <div>\n      <CastList casts={cast} />\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'bca34bbfc009d7fec4acd7837db1b38e',\n  },\n});\n\nexport const trendingMovie = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const data = await instance.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReview = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["CastList","elements","casts","map","id","profile_path","original_name","name","character","photo","className","styles","src","alt","defaultProps","useState","cast","loading","error","state","setState","useParams","useEffect","fetchCast","prevState","getMovieCredits","message","instance","axios","baseURL","params","api_key","trendingMovie","get","data","getMovieById","searchMovie","query","getMovieReview"],"sourceRoot":""}